{
    "_parent_entries": [
        [ "^", "byname", "python_in_shell" ]
    ],
    "_producer_rules": [
        [ ["shell_tool", "can_download_url_from_google_drive" ] , [["detect"]],
            { "tool_name": "gdown", "shell_cmd_with_subs": "\"#{tool_path}#\" -O \"#{target_path}#\" \"#{url}#\"" }
        ],
        [ ["shell_tool", "can_download_url_from_google_drive" ] , [["detect"]],
            {   "tool_name": "gdown",
                "parent_entry_name": "python_in_shell",
                "python_deps": [
                    [ "AS^IS", "^", "byquery", "python_package,package_name=gdown" ]
                ],
                "shell_cmd_with_subs": "\"#{tool_path}#\" -O \"#{target_path}#\" \"#{url}#\""
            }
        ],

        [ ["shell_tool", "can_download_url_from_zenodo" ] , [["detect"]],
            { "tool_name": "zenodo_get", "shell_cmd_with_subs": "\"#{tool_path}#\" --output-dir=\"#{record_entry_path}#\" --doi=\"#{url}#\"" }
        ],
        [ ["shell_tool", "can_download_url_from_zenodo" ] , [["detect"]],
            {   "tool_name": "zenodo_get",
                "parent_entry_name": "python_in_shell",
                "python_deps": [
                    [ "AS^IS", "^", "byquery", "python_package,package_name=zenodo-get" ]
                ],
                "shell_cmd_with_subs": "\"#{tool_path}#\" --output-dir=\"#{record_entry_path}#\" --doi=\"#{url}#\""
            }
        ],

        [ [ "shell_tool", "can_download_url", "tool_name?=wget" ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -O \"#{target_path}#\" #{url}#" } ],
        [ [ "shell_tool", "can_download_url", "tool_name?=curl" ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -L -o \"#{target_path}#\" #{url}#" } ],

        [ [ "shell_tool", "can_extract_tar" ], [["detect"]], { "tool_name": "tar", "strip_components": 0,
            "uncompression_insert": [ "AS^IS", "AS^IS", "^^", "case",   [ ["^^", "get", "archive_format"],
                "tar", "",
                "tgz", "z",
                "txz", "J"
            ] ],
            "strip_components_insert": [ "AS^IS", "AS^IS", "^^", "case",   [ ["^^", "get", "strip_components"],
                0, ""
            ], {"default_value": ["^^", "substitute", "--strip-components #{strip_components}#"] } ],
            "shell_cmd_with_subs": "\"#{tool_path}#\" -#{uncompression_insert}#xvf - -C \"#{target_path}#\" #{strip_components_insert}# < \"#{archive_path}#\""
        } ],

        [ [ "shell_tool", "can_extract_zip", "tool_name?=unzip"        ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -d \"#{target_path}#\" \"#{archive_path}#\"" } ],
        [ [ "shell_tool", "can_extract_zip", "tool_name?=7z.exe"       ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" x \"#{archive_path}#\" -o\"#{target_path}#\"" } ],

        [ [ "shell_tool", "can_uncompress_gz", "tool_name?=7z.exe"     ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" e \"#{target_path}#\"" } ],
        [ [ "shell_tool", "can_uncompress_gz", "tool_name?=gzip.exe"   ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -d \"#{target_path}#\"" } ],
        [ [ "shell_tool", "can_uncompress_gz", "tool_name?=gunzip"     ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" \"#{target_path}#\"" } ],

        [ [ "shell_tool", "can_compute_md5", "tool_name?=md5sum.exe"   ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" \"#{file_path}#\" | cut -f 1 -d \" \" | sed \"s/\\\\\\\\//g\"", "capture_output": true } ],
        [ [ "shell_tool", "can_compute_md5", "tool_name?=certutil.exe" ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -hashfile \"#{file_path}#\" MD5 | findstr /v \":\"", "capture_output": true } ],
        [ [ "shell_tool", "can_compute_md5", "tool_name?=md5sum"       ], [["detect"]], { "shell_cmd_with_subs": "'#{tool_path}#' '#{file_path}#' | cut -f 1 -d ' '", "capture_output": true } ],
        [ [ "shell_tool", "can_compute_md5", "tool_name?=md5"          ], [["detect"]], { "shell_cmd_with_subs": "'#{tool_path}#' -r '#{file_path}#' | cut -f 1 -d ' '", "capture_output": true } ],


        [ [ "shell_tool", "can_python", ["desired_python_version", [ "^", "kernel_python_major_dot_minor" ]] ], [["detect"]],
            {   "tool_name": [ "AS^IS", "^^", "substitute", "python#{desired_python_version}#" ],
                "tool_path": [ "^", "python_path" ],
                "shell_cmd_with_subs": "\"#{tool_path}#\" --version",
                "capture_output": true,
                "tool_version": [ "AS^IS", "^^", "execute", [[
                    [ "run", [], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version" } ],
                    [ "split", " " ],
                    [ "__getitem__", 1 ]
                ]] ],
                "major_dot_minor": [ "AS^IS", "^^", "execute", [[
                    [ "get", "tool_version"],
                    [ "rsplit", [".", 1] ],
                    [ "__getitem__", 0 ]
                ]] ]
            }, ["exec_suffixes"]
        ],
        [ [ "shell_tool", "can_python", "desired_python_version." ], [["detect"]],
            {   "tool_name": [ "AS^IS", "^^", "substitute", "python#{desired_python_version}#" ],
                "shell_cmd_with_subs": "\"#{tool_path}#\" --version",
                "capture_output": true,
                "tool_version": [ "AS^IS", "^^", "execute", [[
                    [ "run", [], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version" } ],
                    [ "split", " " ],
                    [ "__getitem__", 1 ]
                ]] ],
                "major_dot_minor": [ "AS^IS", "^^", "execute", [[
                    [ "get", "tool_version"],
                    [ "rsplit", [".", 1] ],
                    [ "__getitem__", 0 ]
                ]] ]
            }, ["exec_suffixes"]
        ],
        [ [ "shell_tool", "can_python", "desired_python_version!." ], [["detect"]],
            {   "tool_name": [ "AS^IS", "^^", "substitute", "python#{desired_python_version}#", { "desired_python_version": ["^", "kernel_python_major_dot_minor"] } ],
                "tool_path": [ "^", "python_path" ],
                "desired_python_version": ["^", "kernel_python_major_dot_minor"],
                "shell_cmd_with_subs": "\"#{tool_path}#\" --version",
                "capture_output": true,
                "tool_version": [ "AS^IS", "^^", "execute", [[
                    [ "run", [], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version" } ],
                    [ "split", " " ],
                    [ "__getitem__", 1 ]
                ]] ],
                "major_dot_minor": [ "AS^IS", "^^", "execute", [[
                    [ "get", "tool_version"],
                    [ "rsplit", [".", 1] ],
                    [ "__getitem__", 0 ]
                ]] ]
            }, ["exec_suffixes"]
        ],


        [ [ "shell_tool", "can_git"], [["detect"]], {
                "tool_name": "git",
                "shell_cmd": [ "AS^IS", "^^", "substitute", [[ "#{tool_path}#", "--version" ]] ],
                "capture_output": true
        } ],

        [ [ "shell_tool", "can_patch" ], [["detect"]], { "tool_name": "patch", "shell_cmd_with_subs": "\"#{tool_path}#\" -p1 -d \"#{entry_path}#\" -i \"#{abs_patch_path}#\"" } ],

        [ [ "shell_tool", "can_gpu", "tool_name?=nvidia-smi.exe" ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -L | findstr GPU | find /c /v \"\"" ,  "capture_output": true} ],
        [ [ "shell_tool", "can_gpu", "tool_name?=nvidia-smi"     ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" -L | grep -c GPU" ,  "capture_output": true} ],
        [ [ "shell_tool", "can_gpu", "tool_name?=echo"           ], [["detect"]], { "shell_cmd": "echo 0" ,  "capture_output": true} ],

        [ [ "shell_tool", "can_compile_c", "tool_name?=gcc"      ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version", "capture_output": true } ],
        [ [ "shell_tool", "can_compile_c", "tool_name?=clang"    ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version", "capture_output": true } ],
        [ [ "shell_tool", "can_compile_c", "tool_name?=cc"       ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version", "capture_output": true } ],
        [ [ "shell_tool", "can_compile_c", "tool_name?=cl.exe"   ], [["detect"]], { "shell_cmd_with_subs": "\"#{tool_path}#\" --version", "capture_output": true } ]
    ],

    "exec_suffixes": [ "^^", "case", [ [ "^", "func", [ "sys.platform.startswith", "win" ] ], true, [ "", ".exe", ".bat", ".com" ], false, [ "" ] ]],

    "tool_path": [ "^^", "which" ],
    "tool_name": [ "^^", "func", [ "os.path.basename", ["^^", "get", "tool_path"] ] ]
}
